@ 자료구조 1주 1차

# 용어 정리

- 자료구조 
	컴퓨터에서 사용할 자료를 더 효율적으로 저장하고 
	처리 할 수 있도록 자료의 특성과 사용 용도에 맞게 분류하고 정리한 것이다.

- 2진수 
	컴퓨터에서 자료를 표현하기 위해 1과 0(on/off, 참/거짓)의 조합으로 구성된 코드이다.

- 2의 보수
	2진수를 표현하는 방법중의 하나로 뺄셈 연산을 가산기 회로를 통해 감산할 수 있도록 
	변환한 코드, 컴퓨터에서 실제 사용하는 방식이다.


@ 학습내용
# 자료구조의 개요와 정의
	
1. 자료구조의 정의
	- 자료를 효율적으로 표현하고 저장하고 처리할 수 있도록 정리하는 
	
	예시 ) 일상생활의 자료구조 : 도서관의 서적 분류, 문구점의 상품분류, 편의점의 상품 분류 등등
	
2. 컴퓨터구조에서 자료구조를 왜 배워야 하나?
	- 컴퓨터가 자료를 효율적으로 처리하려면 
	문제도출과 문제 변환 단계에서 문제를 자료구조 측면에서 분석하고 구성해야 함 
	
	- 프로그래머는 문제를 더 효율적이고 효과적으로 해결하기 위해 문제를 정의하고 분석하여 효율적으로 
	문제를 처리하기 위해 처리방식을 결정하여 알고리즘을 작성하고 자료를 정의해서 
	그에 대한 최적의 프로그램을 작성해야 함 
	
3. 자료구조의 3가지 측면
	- 이론적 측면
	- 효율적 측면
	- 실제적인 측면
	
	**참고 : 자료구조 1주 1차 01.jpg


# 자료구조의 분류

1. 자료의 형태에 따른 분류
	- 표현할 자료의 특성과 주된 사용방법, 수행하는 연산의 특성,
	구현에 필요한 저장 공간 용량(공간복잡도)과 실행 소요시간(시간복잡도)등을 
	고려하여 효율적인 자료구조를 선택해야 함.
	
	**참고 : 자료구조 1주 1차 02.jpg 

		1) 단순구조
		- 자료값을 사용하기 위한 가장 기본형태
		- 프로그래밍 언어에서 제공하는 정수, 실수, 문자 문자열 등의 
		데이터 타입 해당함
	
		2) 선형구조
		- 자료들 사이의 관계가 1:1 관계
		- 순차 리스트, 연결리스트, 스택, 큐, 데크 등이 있음
		
		>순차리스트
			- 자료의 논리적인 순서와 기억장소에 저장되는 물리적 순서가 일치하는 구조
		
		>연결리스트 
			- 물리적인 순서와 상관없이 포인터를 사용하여 논리적인 순서대로 연결하는 구조
		
		>스택, 큐, 데크 리스트
			- 자료의 삽입이나 삭제 위치 대한 제한 조건이 있는 리스트


		3) 비선형구조
		- 자료들 사이의 관계가 1:다 또는 다:다 관계
		- 계층구조나 망구조를 갖는 자료구조로 트리, 그래프 등이 있음


		4) 파일구조
		- 서로관련 있는 필드로 구성된 레코드의 집합인 파일에 대한 구조로
		보조기억장치에 데이터가 실제 기록되는 형태
		- 파일 구성방식에 따라 순차 파일, 색인 파일, 직접 파일 등이 있음.

# 디지털 표현 방법 - 수치 자료표현

1. 컴퓨터에서의 자료표현
	- 컴퓨터는 자료를 표현하기 위해 1과 0의 조합으로 구성되는 2진수 코드를 사용함
	
	- 숫자, 문자, 그림, 소리, 기호 등 자료의 형식이 아무리 다양해도 컴퓨터 내부에서는 
	오직 1과 0을 조합한 2진수 코드 형태로 모든 형식의 자료를 표현하고 저장 및 처리함
	
	- 1과 0, On과 Off, 참(True)과 거짓(False)의 조합 
	
	- 한 자리에서 나타낼 수 있는 숫자를 1또는 0로 표현하는 단위로 bit라고 함
	

	
2. 비트(bit)
	- 1비트는 2진수로 0과 1을 표현할 수 있다	
	- 1바이트는 컴퓨터의 처리 기본 단위이다
	
	- 비트 분류
	비트 	용어	10진수 범위 		경우의수
	------------------------------------------------------------------
	1비트 	1비트 	0  ~ 1		(2가지)
	4비트  	1니블 	0 ~ 15		(16가지)
	8비트  	1바이트 	0 ~ 127		(128가지)
	

3. 컴퓨터 내부에서 표현할 수 있는 자료의 종류
	- 컴퓨터 내부에서 표현할 수 있는 자료에는 
	수치자료, 문자자료, 논리자료, 포인터 자료, 문자열 자료 등이 있음

	- 이 모든 자료는 1과 0의 조합인 2진수로 표현


	**참고 : 자료구조 1주 1차 03.jpg 

4. 수치 자료의 표현
	- 컴퓨터가 자료를 표현할 때 쓰는 2진수와 우리가 실생활에서 쓰는 10진수는 
	형태가 다르기 때문에 2진수로 쓰여진 자료 값을 보면 이해하거나 쓰기 어렵다고 느낄 수 있다.
	그래서 2진수 형태이지만 10진수로 쉽게 해석할 수 있도록 만든 
	존(Zone)형식과 팩(Pack)형식이 있음
	
	
	1) 다양한 진수 표현

	- 2진수에 대한 10진수, 8진수, 16진수 표현
	> 16진수의 숫자 표현
		1~ 9까지 10진수와 동일한 표현
		A = 10, B =11, C = 12, D = 13, E =14, F = 15
	

	ex) 정수 10을 2진수, 8진수, 16진수로 표현
		진수 	각각의 표현		연산식					10진수		
		--------------------------------------------------------------------------------------------------------------------------	
		2진수   :	1010 	(1 x 2³) + (0 x 2²) + (1 x 2¹) + (0 x 1)			10
		8진수   : 	12	(1 x 8¹) + (2 x 1) 					10	
		16진수 :	A	(1 x A)  ==  (1 x 10) 					10


		ex) 2진수 1010을 10진수, 8진수, 16진수로 표현

		진수 	각각의 표현		연산식					2진수	
		-------------------------------------------------------------------------------------------------------------------------
		10진수 :	10  	2³ + 2¹(2로 계속 나눈다)					1010
		8진수   : 	12	{(0 x 2²) + (0 x 2¹) + (1 x 1)} + {(0 x 2²) + (1 x 2¹) + (0 x 1)}	1010
		16진수 :	A	(1 x 2³) + (0 x 2²) + (1 x 2¹) + (0 x 1)			1010	


	2) 존(Zone) 형식 표현	

	- 10진수 한 자리를 표현하기 위해서 1바이트(8비트) 를 사용하는 형식
	
	- 1바이트를 상위 4비트는 존 영역으로 하위 4비트는 수치영역으로 나누어서 표현한다.
	>존 영역 : 기본적으로 상위 4비트를 1111로 표현
	>수치 영역 : 하위 4비트는 표현하고자 하는 10진수 한 자리 값에 대한 2진수 값을 표시

	ex) 1111xxxx
	상위 1111는 존영역으로 항상 1111로 표시한다.
	하위 xxxx는 10진수 한자리 값에 대한 2진수 값을 표시한다.(0000부터 1001까지)
	
	**참고 : 자료구조 1주 1차 04.jpg


	3) 연결된 값의 존(Zone)형식 표현의 방법

	- 여러 가지의 10진수를 표현하는 방법은 10진수의 자릿수만큼 존 형식을 연결하여 사용한다.
	- 마지막 자리 표현시 양수의 경우는 존 영역을 1100으로 음수의 경우 존영역을 1101로 표현한다.
	> 2진수 1100은 16진수 = C
	> 2진수 1101은 16진수 = D
	> 2진수 1111은 16진수 = F

	**참고 : 자료구조 1주 1차 05.jpg

	ex) 존형식으로 10진수 양수 213 과 10진수 음수 213 표현방법
		+213
		-----------------------------------------------------------------------
		1111 0010		1111 0001		1100 0011
		F        2		F        1		C(+)  3
	
		-213
		-----------------------------------------------------------------------
		1111 0010		1111 0001		1101 0011
		F        2		F        1		D(-)   3

	**참고 : 자료구조 1주 1차 06.jpg


	4) 팩(Pack) 형식의표현	
	
	- 팩형식은 10진수 한 자리를 표현하기 위해서 존 영역 없이 4비트를 사용하는 형식

	- 숫자만 사용하는 10진수 연산에서 존형식을 사용 하면 
	부호를 표시하는 최하위 바이트의 존영역을 제외한 나머지 존영역은 항상 ‘1111’을 저장해야 
	하므로 기억공간이 낭비되고 처리가 지연되는데 이러한 문제를 해결한 것이 팩 형식

	- 연결된 숫자를 표현 할 때 최하위에 4비트를 추가하고 부호를 표시
	> 양수(+) 는 1100(C)로,  음수(-)는 1101(F)로 표시


	**참고 : 자료구조 1주 1차 07.jpg

	ex) 팩형식으로 10진수 양수 213 과 10진수 음수 213 표현방법

		+213
		-------------------------------------------------
		0010	0001	0011	1100
		2	1	3	C(+)

		-213
		-------------------------------------------------
		0010	0001	0011	1101
		2	1	3	D(-)
	
	**참고 : 자료구조 1주 1차 08.jpg

	
	5) 2진수의 정수표현하는 3가지 방법
	
	- 2진수는 일정한 길이의 n비트로 표현하는 방법을 의미한다.
	
	- 실생활에서 사용하는 정수는 음수 양수를 표현하기 위해 –와 +와 같은 부호를 사용하지만 
	컴퓨터는 자료를 표현할 때 2진수만 사용하기 때문에 음수와 양수를 표현하기 위해 
	부호가 아닌 2진수 형태를 사용함

	- 2진수를 정수로 표현하는 방법으로는 “부호를 어떻게 표현하느냐?”에 따라 
	[부호와 절대값형식], [1의 보수형식], [2의 보수형식]으로 구분됨

	- 컴퓨터에서는 [2의 보수형식]을 채택하여 사용한다.
	**참고 : 자료구조 1주 1차 12.jpg


		5 - 1) 부호의 절댓값 형식
		-  n비트의 부호 절댓값 형식
		-  최상위 1비트에 부호 표시 양수면 0으로 음수면 1로 표현한다
		-  최상위는 1비트는 부호에 사용 나머지 비트는 이진수 값을 표현한다.

		ex) 부호의 절댓값 형식으로 양수 21과 음수 21 표현
	
			+21
			1비트	7비트 
			-------------------------
			0(+)	0010101

			-21
			1비트	7비트 
			-------------------------
			1(-)	0010101


		**참고 : 자료구조 1주 1차 09.jpg


		5 - 2) 1의 보수형식
		-  1의 보수1’ Complement 형식 
		-  음수 표현에서 부호 비트를 사용하는 대신 1의 보수를 사용하는 방법
		-  n비트의 2진수를 1의 보수로 만드는 방법
	
		>  n비트를 모두 1로 만든 이진수에서 변환하고자 하는 이진수를 뺌
		>  1 → 0,  0 → 1로 변경

		ex) 1의 보수를 이용한 양수 21 음수 21 표현
	
			1) 먼저 21을 2진수로 변환 한다
				>>> 00010101	// +21	
			2) 그후 변환한 2진수에서 1 → 0,  0 → 1로 변경한다.
				>>> 11101010	// -21
		
			+21		-21
			-------------		--------------
			00010101		11101010


		**참고 : 자료구조 1주 1차 10.jpg
	


		5 - 3) 2의 보수형식	// 컴퓨터에서는 이 방법을 사용한다.
		-  2의 보수2’ Complement 형식
		-  음수의 표현에서 부호 비트를 사용하는 대신 2의 보수를 사용하는 방법
		-  n비트의 2진수를 2의 보수로 만드는 방법
		> 1의 보수에 1을 더한다.

		ex) 2의 보수를 이용한 양수 21 음수 21 표현
	
			1) 먼저 21을 2진수로 변환 한다
				>>> 00010101	// +21	
			2) 그후 변환한 2진수에서 1 → 0,  0 → 1로 변경한다.
				>>> 11101010	// 1의 보수
			3) 마지막으로 변환한 1의 보수에서 +1을 한다.
				>>> 11101011	// -21
			
			+21		-21
			-------------		--------------
			00010101		11101011
	

		**참고 : 자료구조 1주 1차 11.jpg


#self Test
문 )  -39를 1바이트 부호화 절대값형식, 1의 보수형식, 2의 보수형식으로 나타내세요.


	> 부호화 절대값 형식 
		부호	39
		------------------------
		1(-) 	0100111

	> 1의 보수형식
		1) 먼저 39를 2진수로 변환(1바이트)
			>>>  00100111
		2) 1의 보수의 음수표현을 위해 1보수로 변환
			>>>  11011000
		-39
		--------------
		11011000

	> 2읜 보수 형식
		1) 먼저 39를 2진수로 변환(1바이트)
			>>>  00100111
		2) 1의 보수의 음수표현을 위해 1보수로 변환
			>>>  11011000
		3) 위의 결과에 + 1을 해준다
			>>>  11011001
		-39
		--------------
		11011001


	6) 2진수의실수표현

	- 실수는 정수부와 소수부 사이에 소수점이 있는 숫자

	- 컴퓨터는 2진수만으로 실수를 표현해야 하므로 소수점을 직접 표현하지 못하고 
	정수부와 실수부위 위치를 정의하여 실수를 표현

	- 2진수 실수를 표현하는 방법에는 소수점 위치가 항상 같은 자리로 
	고정되는 고정소수점 표현방식과 
	소수점 위치가 고정되지 않고 변하는 부동소수점 표현방식이 있음.
	
	- 컴퓨터의 경우는 부동소수점을 채택하고 있음
	>>> 실수는 표현할 범위가 너무 많기 때문이다


		6-1) 고정 소수점 표현
		- 소수점이 항상 최상위 비트의 왼쪽 밖에 고정되 어 있는 것으로 취급하는 방법
 		- 고정 소수점 표현의 00010101은 0.00010101의 실수 값을 의미	

		6-2) 부동 소수점 표현
		- 고정 소수점 형식에 비해서 표현 가능한 값의 범위가 넓음

 -		- 과학적 표기방식의 실수를 사용

		- 현재 컴퓨터에서는 실수를 표현할 때 IEEE 754 표준표기방식에 따른 부동소수점 표현형식을 사용함  
		부동소수점 표현형식으로 실수를 표현하려면 부호, 지수, 가수의 세 영역을 사용함

 		- 부호비트에는 양수는 0, 음수는 1을 표시

		**참고 : 자료구조 1주 1차 13.jpg


		6-3) 부동 소수점 형식의 표현범위
		- 부동소수점의 표현범위에 따라 
		4바이트(32비트)의 단정밀도 부동소수점 표현(a)과 
		8바이트(64비트)의 배정밀도 부동소수점 표현(b)으로 나누어짐
		
		**참고 : 자료구조 1주 1차 14.jpg 	// (a) (b) 그림 있음

		
	!!!!!!!!!다시보기!!!!!!!!!!!
		ex) 100010.101을 IEEE 754표준에 따라 
		       부동소수점으로 표현한다면 다음 단계를 따름

		① 정규화 : 정수부가 1이 되도록 소수점을 이동하여 과학적 표기로 변환
			>>> 1.00010101 X 2^5

				가수부		지수부
			---------------------------------------------------------
			1.	00010101        X 	2^5
		
		② 부호 : 양수는 0, 음수는 1
		③ 가수부 : 정규화하면 정수부는 항상 1. 이 되므로 정수부를 생략하고 소수부(00010101)만 저장
		④ 지수부 : 정규화에서 구한 지수와 바이어스를 더한 값을 저장
		(바이어스 값은 지수의 양수음수 부호를 표현하기 위한 방법으로 단정밀도 127, 배정밀도 1023 값으로 사용)
	


@ 학습목표
# 자료구조의 개요와 정의를 이해하고 중요성을 설명할 수 있다.
# 자료구조의 분류 내용을 구분할 수 있다.
# 컴퓨터 내부의 2진수 코드 체계와 수치 자료표현 방법을 설명할 수 있다.


@ 학습정리

#자료구조의 개요와 정의
- 자료구조는 다양한 자료를 효율적으로 표현하고 저장하여 처리하고 사용할 수 있도록 하는 것이다.


# 자료구조의 분류
- 자료를 형태에 따라 분류하면 프로그래밍 언어에서 제공하는 정수, 실수, 문자, 문자열 등과 같은 데이터 타입에 해당하는 단순구조가 있고, 
자료들 사이의 관계가 1:1인 선형 구조, 1:다 또는 다:다의 관계인 비선형 구조 그리고 파일구조가 있다


#디지털 표현 방법 - 수치 자료표현
- 10진수를 표현하는 방법은 존과 팩 형식이 있다.
- 2진수 정수를 표현하는 방법에는 부호와 절대값, 1의 보수형식, 2의 보수 형식이 있다.
- 2진수 정수 음수를 표현하는 방법은 3가지 모두 다르지만 현재 컴퓨터에서는 2의 보수형태를 사용한다.
- 2의 보수가 다른 2개보다 1개 더 음수 표현한다.